diff --git a/node_modules/npm/lib/cli.js b/node_modules/npm/lib/cli.js
index c85ecb6..910d141 100644
--- a/node_modules/npm/lib/cli.js
+++ b/node_modules/npm/lib/cli.js
@@ -1,4 +1,3 @@
 const validateEngines = require('./es6/validate-engines.js')
-const cliEntry = require('path').resolve(__dirname, 'cli-entry.js')
 
-module.exports = (process) => validateEngines(process, () => require(cliEntry))
+module.exports = (process) => validateEngines(process, () => require('./cli-entry.js'))
diff --git a/node_modules/npm/lib/commands/profile.js b/node_modules/npm/lib/commands/profile.js
index a7d4ac2..be3ae45 100644
--- a/node_modules/npm/lib/commands/profile.js
+++ b/node_modules/npm/lib/commands/profile.js
@@ -2,7 +2,7 @@ const inspect = require('util').inspect
 const { URL } = require('url')
 const log = require('../utils/log-shim.js')
 const npmProfile = require('npm-profile')
-const qrcodeTerminal = require('qrcode-terminal')
+const qrcodeTerminal = 'stub' // require('qrcode-terminal')
 const Table = require('cli-table3')
 
 const otplease = require('../utils/otplease.js')
diff --git a/node_modules/npm/lib/npm.js b/node_modules/npm/lib/npm.js
index 1470662..b236a5b 100644
--- a/node_modules/npm/lib/npm.js
+++ b/node_modules/npm/lib/npm.js
@@ -196,15 +196,14 @@ class Npm {
 
     // get createSupportsColor from chalk directly if this lands
     // https://github.com/chalk/chalk/pull/600
-    const [{ Chalk }, { createSupportsColor }] = await Promise.all([
+    const [{ Chalk }] = await Promise.all([
       import('chalk'),
-      import('supports-color'),
     ])
     this.#noColorChalk = new Chalk({ level: 0 })
     // we get the chalk level based on a null stream meaning chalk will only use
     // what it knows about the environment to get color support since we already
     // determined in our definitions that we want to show colors.
-    const level = Math.max(createSupportsColor(null).level, 1)
+    const level = 1
     this.#chalk = this.color ? new Chalk({ level }) : this.#noColorChalk
     this.#logChalk = this.logColor ? new Chalk({ level }) : this.#noColorChalk
 
